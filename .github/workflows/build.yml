name: Build

on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.5', '3.6', '3.7', '3.8', '3.9', 'pypy3']
        experimental: [false]
        include:
          - os: ubuntu-18.04
            python-version: '3.4'
            experimental: false
          - os: ubuntu-latest
            python-version: '3.10-dev'
            experimental: true
          - os: macos-latest
            python-version: '3.10-dev'
            experimental: true
          - os: windows-latest
            python-version: '3.10-dev'
            experimental: true
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements-ci.txt
    - name: Test
      run: coverage run share/test.py
    - name: Upload coverage report
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9' }}
      run: |
        pip install codecov
        codecov
    - name: Create release
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: PyBPC f2format ${{ github.ref }}
        body: ${{ join(github.event.commits.*.message, '\n') }}
        draft: false
        prerelease: false
